{"version":3,"sources":["components/Container.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["StyledDiv","styled","div","Container","children","StyledForm","form","HTTP_URL_VALIDATOR_REGEX","Search","useState","link","setLink","short","setShort","isLoading","setIsLoading","handleSubmit","e","preventDefault","match","getLink","a","axios","get","data","result","short_link","console","log","message","onSumbit","TextField","style","marginBottom","label","variant","value","onChange","target","Button","onClick","color","LinearProgress","rel","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAGMA,EAAYC,IAAOC,IAAV,sKAaAC,EAJG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,cAACJ,EAAD,UAAYI,K,qFCRfC,EAAaJ,IAAOK,KAAV,iGAMVC,EAA2B,qGAmElBC,EAjEA,WAAO,IAAD,EACMC,mBAAS,IADf,mBACXC,EADW,KACLC,EADK,OAESF,mBAAS,IAFlB,mBAEVG,EAFU,KAEHC,EAFG,OAGiBJ,oBAAS,GAH1B,mBAGVK,EAHU,KAGCC,EAHD,KAWXC,EAAe,SAACC,GAClBA,EAAEC,iBACcR,EANFS,MAAMZ,IAOjBa,IACHT,EAAQ,IACRI,GAAcD,IAEVD,EAAS,2BAIXO,EAAO,uCAAG,8BAAAC,EAAA,+EAESC,IACpBC,IADoB,+CACwBb,IAHjC,gBAELc,EAFK,EAELA,KAERX,EAASW,EAAKC,OAAOC,YACrBX,GAAa,GALA,gDAQRY,QAAQC,IAAI,KAAMC,SARV,yDAAH,qDAab,OACI,qCACI,eAACxB,EAAD,CAAYyB,SAAU,SAACb,GAAD,OAAOD,EAAaC,IAA1C,UACI,cAACc,EAAA,EAAD,CAAWC,MAAO,CAAEC,aAAc,QAClCC,MAAM,OACNC,QAAQ,WACRC,MAAO1B,EACP2B,SAAU,SAACpB,GAAD,OAAON,EAAQM,EAAEqB,OAAOF,WAEhCtB,GACA,cAACyB,EAAA,EAAD,CACFP,MAAO,CAACC,aAAc,QACtBO,QAAS,SAACvB,GAAD,OAAOD,EAAaC,IAC7BkB,QAAQ,YACRM,MAAM,UAJJ,oBASD3B,GAAa,cAAC4B,EAAA,EAAD,OAGlB,8BACe,KAAV9B,EAAe,mBAAG0B,OAAO,SAASK,IAAI,aAAaC,KAAMlC,EAA1C,SAAiDE,IAAa,uEC3D/EiC,MARf,WACE,OACE,cAAC,EAAD,UACI,cAAC,EAAD,OCKOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a3ca319b.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  height: 100vh;\n  text-align: center;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = ({ children }) => {\n  return <StyledDiv>{children}</StyledDiv>;\n};\n\nexport default Container;","import React, {useState} from 'react';\nimport { TextField, Button, LinearProgress } from '@material-ui/core'\nimport axios from 'axios'; \nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nconst HTTP_URL_VALIDATOR_REGEX = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\n\nconst Search = () => {\n    const[link, setLink] = useState('');\n    const [short, setShort] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n     \n    const validateURL = (string) => \n    {\n        return string.match(HTTP_URL_VALIDATOR_REGEX)\n    }\n    \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (validateURL(link)) {\n           getLink();\n        setLink('');\n        setIsLoading(!isLoading) \n        } else {\n            setShort('please input valid url')\n        }\n    };\n\n    const getLink = async () => {\n        try{\n        const {data} = await axios\n        .get(`https://api.shrtco.de/v2/shorten?url=${link}`)\n       setShort(data.result.short_link);\n       setIsLoading(false)\n        }\n        catch(error){\n            console.log(error.message)\n        }\n        \n    }\n    \n    return (\n        <>\n            <StyledForm onSumbit={(e) => handleSubmit(e)}>\n                <TextField style={{ marginBottom: '20px'}}  \n                label=\"Link\"\n                variant=\"outlined\"\n                value={link}\n                onChange={(e) => setLink(e.target.value)}\n                />\n                {!isLoading && (\n                  <Button \n                style={{marginBottom: '20px'}}\n                onClick={(e) => handleSubmit(e)}\n                variant=\"contained\" \n                color=\"primary\">\n                    Submit\n                </Button>  \n                ) }\n\n                {isLoading && <LinearProgress />}\n                \n            </StyledForm>\n            <div>\n                {short !== '' ? <a target='_blank' rel='noreferrer' href={link}>{short}</a> : <p>your short link will appear here</p>}\n                \n            </div>\n        </>\n    )\n}\n\nexport default Search; ","import Container from './components/Container';\nimport './App.css';\nimport Search from './components/Search';\n\nfunction App() {\n  return (\n    <Container>\n        <Search/> \n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}